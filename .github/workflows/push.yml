name: Electron Forge CI/CD

on:
  push:
    tags:
      - '*'
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Use Node.js 22.5.1
        uses: actions/setup-node@v4
        with:
          node-version: '22.5.1'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Package application
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: pnpm electron-forge publish --dry-run

      - name: Display structure of downloaded files
        run: ls -R

      - name: Run tests
        uses: coactions/setup-xvfb@v1
        with:
          run: pnpm test:e2e:raw

      - name: Upload artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-out
          path: out/**/*

  release:
    permissions:
      contents: write
      discussions: write
    needs: build-and-test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.os }}-out
          path: out

      - name: Display structure of downloaded files
        run: ls -R

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Use Node.js 22.4
        uses: actions/setup-node@v4
        with:
          node-version: '22.4'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --prod=false

      - name: Publish release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm electron-forge publish --from-dry-run

    # - name: Release
    #   uses: softprops/action-gh-release@v2
    #   with:
    #     files: |
    #       artifacts/**/*
    #     draft: true
    #     prerelease: true
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
